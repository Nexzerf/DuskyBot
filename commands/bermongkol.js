const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const fs = require('fs');
const numberGrades = JSON.parse(fs.readFileSync('./berlnw.json', 'utf8'));

module.exports = {
  data: new SlashCommandBuilder()
    .setName('berlnw')
    .setDescription('‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå')
    .addStringOption(option =>
      option.setName('‡πÄ‡∏ö‡∏≠‡∏£‡πå')
        .setDescription('‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì')
        .setRequired(true)
    ),

  async execute(interaction) {
    const phone = interaction.options.getString('‡πÄ‡∏ö‡∏≠‡∏£‡πå').replace(/\D/g, ''); // ‡∏•‡∏ö non-digit
    if (!/^[0-9]{9,10}$/.test(phone)) {
      return interaction.reply('üìµ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (9-10 ‡∏´‡∏•‡∏±‡∏Å)');
    }

    const digits = phone.slice(1); // ‡∏ï‡∏±‡∏î‡πÄ‡∏•‡∏Ç 0 ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏≠‡∏Å
    const pairs = [];
    for (let i = 0; i < digits.length - 1; i++) {
      pairs.push(digits.slice(i, i + 2));
    }

    const fields = [];
    const gradeCounts = {};

    for (const pair of pairs) {
      const data = numberGrades[pair];
      if (data) {
        fields.push({
          name: `üî¢ ‡∏Ñ‡∏π‡πà‡πÄ‡∏•‡∏Ç ${pair}`,
          value: data.description,
        });
        gradeCounts[data.grade] = (gradeCounts[data.grade] || 0) + 1;
      } else {
        fields.push({
          name: `‚ùì ‡∏Ñ‡∏π‡πà‡πÄ‡∏•‡∏Ç ${pair}`,
          value: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö',
        });
      }
    }

    // ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏Å‡∏£‡∏î‡∏£‡∏ß‡∏°
    const gradePriority = ['A+', 'A', 'B+', 'B', 'C+', 'C', 'D+', 'D', 'F'];
    let summaryGrade = null;
    for (const grade of gradePriority) {
      if (gradeCounts[grade]) {
        summaryGrade = grade;
        break;
      }
    }

    let summaryAdvice = '‚úÖ ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏î‡∏µ';
    if (summaryGrade === 'D' || summaryGrade === 'F') {
      summaryAdvice = '‚ö†Ô∏è ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô';
    } else if (summaryGrade === 'C' || summaryGrade === 'D+') {
      summaryAdvice = '‚ö†Ô∏è ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ß‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏î‡∏ß‡∏á';
    }

    const embed = new EmbedBuilder()
      .setTitle(`üì± ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏ö‡∏≠‡∏£‡πå: ${phone}`)
      .setColor('#3333ff')
      .addFields(fields)
      .addFields({
        name: 'üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏£‡∏ß‡∏°',
        value: `‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö **${summaryGrade}**\n${summaryAdvice}`
      })
      .setFooter({ text: 'üß† ‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏ç‡∏≤‡∏ì‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏Å‡πÇ‡∏´‡∏£‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÑ‡∏ó‡∏¢' });

    await interaction.reply({ embeds: [embed], ephemeral: true });

  }
};
