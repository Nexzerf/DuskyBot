// commands/morse.js
const { SlashCommandBuilder } = require('discord.js');

const morseMap = {
  // ‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© A-Z
  a: '.-', b: '-...', c: '-.-.', d: '-..', e: '.', f: '..-.',
  g: '--.', h: '....', i: '..', j: '.---', k: '-.-', l: '.-..',
  m: '--', n: '-.', o: '---', p: '.--.', q: '--.-', r: '.-.',
  s: '...', t: '-', u: '..-', v: '...-', w: '.--', x: '-..-',
  y: '-.--', z: '--..',

  // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
  0: '-----', 1: '.----', 2: '..---', 3: '...--', 4: '....-',
  5: '.....', 6: '-....', 7: '--...', 8: '---..', 9: '----.',

  // ‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
  ' ': '/', '.': '.-.-.-', ',': '--..--', '?': '..--..',

  // ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÑ‡∏ó‡∏¢ (‡∏û‡∏¢‡∏±‡∏ç‡∏ä‡∏ô‡∏∞‡πÅ‡∏•‡∏∞‡∏™‡∏£‡∏∞‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô)
  ‡∏Å: '.-', ‡∏Ç: '..-.', ‡∏É: '..--', ‡∏Ñ: '-.-', ‡∏Ö: '-.--', ‡∏Ü: '--..',
  ‡∏á: '--.', ‡∏à: '.---', ‡∏â: '...-', ‡∏ä: '-.-.', ‡∏ã: '...-',
  ‡∏ç: '.-..', ‡∏é: '-..-', ‡∏è: '-..', ‡∏ê: '-.-.', ‡∏ë: '...-', ‡∏í: '--..',
  ‡∏ì: '-.--', ‡∏î: '-..', ‡∏ï: '-', ‡∏ñ: '-.-.', ‡∏ó: '-', ‡∏ò: '...-', ‡∏ô: '-.',
  ‡∏ö: '-...', ‡∏õ: '.--.', ‡∏ú: '.--', ‡∏ù: '..-.', ‡∏û: '.--.', ‡∏ü: '..-.',
  ‡∏†: '.--.', ‡∏°: '--', ‡∏¢: '-.--', ‡∏£: '.-.', ‡∏•: '.-..', ‡∏ß: '.--',
  ‡∏®: '...', ‡∏©: '...', ‡∏™: '...', ‡∏´: '....', ‡∏¨: '.-..', ‡∏≠: '.', ‡∏Æ: '....',

  ‡∏∞: '.-',
  ‡∏≤: '.-',
  ‡πÄ: '.',
  ‡πÅ: '.-',
  ‡πÇ: '--',
  ‡πÉ: '..',
  ‡πÑ: '..'
}


module.exports = {
  data: new SlashCommandBuilder()
    .setName('morse')
    .setDescription('üî§ ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏°‡∏≠‡∏£‡πå‡∏™ (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÑ‡∏ó‡∏¢-‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)')
    .addStringOption(option =>
      option.setName('‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°')
        .setDescription('‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏°‡∏≠‡∏£‡πå‡∏™')
        .setRequired(true)
    ),

  async execute(interaction) {
    const input = interaction.options.getString('‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°').toLowerCase();
    let output = '';

    for (const char of input) {
      output += morseMap[char] ? `${morseMap[char]} ` : '[?] ';
    }

    await interaction.reply({
      embeds: [{
        title: 'üì° ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏°‡∏≠‡∏£‡πå‡∏™',
        fields: [
          { name: '‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö', value: input },
          { name: '‡∏°‡∏≠‡∏£‡πå‡∏™', value: output.trim() }
        ]
      }]
    });
  },
};
