const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const axios = require('axios');
const provinceMap = require('../thai_provinces_airvisual_map.json');
require('dotenv').config();

module.exports = {
  data: new SlashCommandBuilder()
    .setName('airquality')
    .setDescription('‡πÄ‡∏ä‡πá‡∏Å‡∏Ñ‡πà‡∏≤‡∏ù‡∏∏‡πà‡∏ô PM2.5 ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®')
    .addStringOption(option =>
      option.setName('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î')
        .setDescription('‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)')
        .setRequired(true)
    ),

  async execute(interaction) {
    const provinceThai = interaction.options.getString('‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î');
    await interaction.deferReply();

    const mapping = provinceMap[provinceThai];

    if (!mapping) {
      return interaction.editReply(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î "${provinceThai}" ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`);
    }

    const { city, state } = mapping;

    try {
      const url = `http://api.airvisual.com/v2/city?city=${encodeURIComponent(city)}&state=${encodeURIComponent(state)}&country=Thailand&key=${process.env.AIRVISUAL_API_KEY}`;
      const res = await axios.get(url);
      const data = res.data.data;

      const aqi = data.current.pollution.aqius;
      const pm25 = data.current.pollution.mainus;
      const temp = data.current.weather.tp;

      let level = '';
      if (aqi <= 50) level = 'üü¢ ‡∏î‡∏µ';
      else if (aqi <= 100) level = 'üü° ‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á';
      else if (aqi <= 150) level = 'üü† ‡πÑ‡∏°‡πà‡∏î‡∏µ‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á';
      else if (aqi <= 200) level = 'üî¥ ‡πÑ‡∏°‡πà‡∏î‡∏µ';
      else level = 'üü£ ‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡∏°‡∏≤‡∏Å';

      const embed = new EmbedBuilder()
        .setColor('#00aaff')
        .setTitle(`üå´ ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÉ‡∏ô‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î ${provinceThai}`)
        .addFields(
          { name: 'üìä ‡∏Ñ‡πà‡∏≤ AQI (US)', value: `${aqi} - ${level}`, inline: true },
          { name: 'üå¨ PM2.5', value: `${pm25}`, inline: true },
          { name: 'üå° ‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥', value: `${temp}¬∞C`, inline: true }
        )
        .setTimestamp()
        .setFooter({ text: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å AirVisual API' });

      await interaction.editReply({ embeds: [embed] });

    } catch (error) {
      console.error(error);
      await interaction.editReply('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å AirVisual API ‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á');
    }
  }
};
